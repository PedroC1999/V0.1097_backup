##################################################################################
#	Macros
##################################################################################
[gcode_macro PRINT_START]
gcode:        
    RESPOND MSG="Running PRINT_START"
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}

    # Start sequence
    M140 S{bedtemp}                                                               ; start heating bed to target temp
    M104 S{180}                                                                   ; start heating nozzle to safe no-ooze temp
    SET_LED LED=lights RED=0.7 GREEN=0.7 BLUE=0.7                      
    CG28
    
    RESPOND MSG="Running CHAMBER_SOAK to {target_temp}"
    CHAMBER_SOAK TARGET_TEMP={chambertemp}
    RESPOND MSG="Waiting for bed to reach {bedtemp}"
    M190 S{bedtemp}                                                              ; set & wait for bed temp
    RESPOND MSG="Waiting for hotend to reach {hotendtemp}"
    M109 S{hotendtemp}                                                           ; set & wait for hotend temp
    G28 Z                                                                        ; final z homing
    PROBE_BED
    PURGE_LINE
    
    # Commands required for SS
    M73 P0 R91
    G21
    G90
    M83
    RESPOND MSG="Starting Print"

[gcode_macro PURGE_LINE]
gcode:
    RESPOND MSG="Purging"
    G90
    G0 Y0 X40                                                                     ; go to tongue of print bed
    G1 Z0.2 F500.0                                                                ; move bed to nozzle
    G92 E0.0                                                                      ; reset extruder
    G1 E4 F1000                                                                   ; pre-purge prime LENGTH SHOULD MATCH YOUR PRINT_END RETRACT
    G1 X80 E8.0 F1000.0                                                           ; intro line 1
    G1 Y0.3                                                                       ; move in a little
    G92 E0.0                                                                      ; reset extruder
    G1 X40 E6.0 F1000.0                                                           ; second line
    G92 E0.0                                                                      ; reset extruder
    G1 E-0.4 F3600                                                                ; retract filament
    G92 E0.0                                                                      ; reset extruder
    G1 Z0.4                                                                       ; move nozzle to prevent scratch

[gcode_macro PRINT_END]
gcode:
    M400                                                                          ; wait for buffer to clear
    RESPOND MSG="Running PRINT_END"
    G92 E0                                                                        ; zero the extruder
    G1 E-4.0 F3600                                                                ; retract filament
    G91                                                                           ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 25) %}
        {% set z_safe = 25.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600                                                            ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000                                                 ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                                                                          ; turn off fan
    G90                                                                           ; absolute positioning
    G0 X60 Y{max_y} F3600                                                         ; park nozzle at rear
    SET_LED LED=lights RED=0.00 GREEN=0.5 BLUE=0.00
	
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   G1 E15 F150                    ; prime nozzle with filament
   G1 E15 F150                    ; prime nozzle with filament
   G1 E15 F150                    ; prime nozzle with filament
   G1 E15 F150                    ; prime nozzle with filament
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-50 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro CG28]
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
		G28
	{% endif %}

[gcode_macro CHAMBER_SOAK]
gcode:
    {% set target_temp = params.TARGET_TEMP|default(40)|int %}

    M140 S110  ; warm up bed
    M104 S180
    M106 S204                                                                     ; part cooling fan to 80% to distribute air
    CG28                                                                          ; conditional home (see CG28 from Ellis' repo)
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F3600 ; this moves the toolhead to the middle of the bed and in the lower 1/2 of the Z height.
    RESPOND MSG="Waiting for chamber to reach {target_temp|default(40)}"
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_temp}    ; wait for chamber temp to reach 50 - change sensor name to whatever your extruder thermistor is called
    RESPOND MSG="Heat soak complete"
    M106 S0

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
variable_extrude: 1.0
gcode:
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}                      ; read E from pause macro
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}                ; set park positon for x and y
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}

    # Calculate save lift position
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 25.0) %}
        {% set z_safe = 25.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    # End of calculations

    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}                      ; read E from pause macro
    # Get VELOCITY parameter if specified
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    # End of calculations
    
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro PROBE_BED]
description: Calibrates Bed Mesh
gcode:
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=default LOAD=default 

[gcode_macro PROBE_SCREWS]
description: Calculates screw adjustments
gcode:
    SCREWS_TILT_CALCULATE

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# For use with Marlin's linear advance calibration: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	SET_PRESSURE_ADVANCE ADVANCE={pa}

[gcode_macro WHITE_LOW]
gcode:
    SET_LED LED=lights RED=0.01 GREEN=0.01 BLUE=0.01

[gcode_macro WHITE_MEDIUM]
gcode:
    SET_LED LED=lights RED=0.2 GREEN=0.2 BLUE=0.2

[gcode_macro WHITE_HIGH]
gcode:
    SET_LED LED=lights RED=1.0 GREEN=1.0 BLUE=1.0

[gcode_macro RED_LOW]
gcode:
    SET_LED LED=lights RED=0.01 GREEN=0.00 BLUE=0.00

[gcode_macro RED_MEDIUM]
gcode:
    SET_LED LED=lights RED=0.2 GREEN=0.0 BLUE=0.0

[gcode_macro RED_HIGH]
gcode:
    SET_LED LED=lights RED=1.0 GREEN=0.0 BLUE=0.0